//===== Hercules Script ======================================
//= Kafra Functions // [TRADUZIDO]
//===== By: ==================================================
//= rAthena Dev Team
//= Darlskies, Darkchild, Syrus22, Lupus, kobra_k88 (2.0)
//= L0ne_W0lf
//===== Current Version: =====================================
//= 6.8
//===== Description: =========================================
//= These functions handle save, storage, cart rental, teleport,
//= and Free Teleport/Warp/Rent Cart options for all Kafra NPCs.
//=
//= Kafra's will need a lot of work. The Welcome Message argument
//= may become obsolete, as most kafras have a slightly differing
//= Welcome message.
//===== Additional Comments: =================================
//= 1.1 Now using functions v2.1 Added Cart Rent for Classes: Whitesmith, Professor.
//=     Replaced checkoption(x) into checkcart(0) [Lupus] v2.1b Added Fix Kafra Pass Func [Kobra_k88]
//= 2.2 Final fix of the Kafra Pass Exploit! [Lupus] a -Izlude[4] fix
//= 2.2a Minor changes to function calls.  Using agruments. Added Guild options. [kobra_k88]
//= 2.2b This version uses arrays for the teleport option. Rearranged next statements to make menu transitions smoother. [kobra_k88]
//= 2.3 Removed SAVE from Niflheim. [Lupus]
//= 2.3 removed "fix" by HawkMoon RTFM and check supernovice.txt . There's a SPECIAL Kafra which gives CARTS to SN for a special proce. [Lupus]
//= 2.4 Added Baby Class Support (Baby Novice check) Removed annoying storage feature where u had to close dialog window to be able to use your storage [Lupus]
//= 2.5 Added Louyang official Kafra, fixes some Kafras, not letting you to Save your position [Lupus]
//= 2.6 Reverted Dungeons Kafras (they should offer only Storage). Added temp Ayothaya Kafra
//= 2.7 Added correct Ayothaya, Louyang & Amatsu Kafras. [Lupus]
//= 2.8 Fixed Amatsu Storage problems [Lupus] 2.9 Fixed spelling mistakes. [Nexon]
//= 3.0 Added special "not working teleport menu" for Einbroch Kafras [Lupus]
//= 3.1 Removed callfunc Is_####_Class in favor of baseClass [Silentdragon]
//= 3.2 Fixed an exploit [Lupus]
//= 4.0 Added Kafra storage password protection. [Lupus]
//=     to block Kafra Password, read comments at 350 line
//= 5.0 Fixed the close2;....close; end; lines. Who let them slip away? =/ [erKURITA]
//=     Also, the kafra upon warp was giving back the zeny. Removed. [erKURITA]
//= 5.1 Optimized a little, added no tele/save arg's [Evera]
//= 5.1a Temporary? Added F_ClearGarbage to clear unused/outdated variables [Lupus]
//= 5.2 By default commented out custom Guilds Kafra's "Guild Storage". [Lupus]
//= 5.3 uncommented Guild Storage. Confirmed kRO feature. [Lupus]
//= 5.4 added -Guide option (Kafra shows you nearest Guide) Work in progress.
//=     Need all coords for all guides.. and somehow pass their coords to kafra.
//=     Removed universal Kafra Pass, added 3 new Kafra Tickets [Lupus]
//= 5.4b temporary moved "-Guide" from the 1st menu punct [Lupus]
//= 5.5 Added proper Niflheim welcome message.	[L0ne_W0lf]
//=     Cleaned up the menus a bit. Got rid of the proceeding "-" prefix.
//= 5.5b Missed a preceeding hyphen, which was screwing up teleporting. [L0ne_W0lf]
//= 5.6 Further dialog updates, added  dynamic costs for cart and storage use. [L0ne_W0lf]
//=     Updated some functions to handle Guild Kafras the way they should.
//= 5.6a Corrected a few wrong names in the teleport function. [L0ne_W0lf]
//= 5.7 Correced end message no longer displaying, and the duplicate names [L0ne_W0lf]
//=     Thanks to Barron-Monster for pointing out the issues.
//= 5.8 Fixed another double name being shown when "saving" [L0ne_W0lf]
//= 5.9 Fixed the Kafra Welcome message for guilds. Thanks Barron-Monster. [L0ne_W0lf]
//= 6.0 Closed Kafra Password exploit in Cool Event Corp. Storages until we got a client/packet based password support.
//=     Added 2 args into F_SetKafCode to fit it in Cool Evnt Co. NPC [Lupus]
//= 6.1 Added menu for Turbo Track Kafra Staff. [L0ne_W0lf]
//= 6.2 Updated/Fixed warp cords. [Kisuka]
//= 6.3 #kafra_code is now stored as is. [brianluau]
//= 6.4 Removed unofficial Guide function. [Daegaladh]
//= 6.5 Optimized. [Joseph]
//= 6.6 Added Warp Points / View Points Function. [Joseph]
//= 6.7 Added Rune Knight Kafra. [Euphy]
//= 6.8 Improved compatibility with Zonda Staff NPCs. Modernized syntax. [Haru]
//============================================================

//=== Main Function ========================================================
//=   arg(0): Used to determine which welcome message to show.
//=   arg(1): Used to determine which menu to display.
//=   arg(2): Used to determine if the info menu is shown in F_KafInfo.
//=   arg(3): Cost to use Storage
//=   arg(4): Cost to Rent a Pushcart
//==========================================================================
function	script	F_Kafra	{
	callfunc "F_ClearGarbage"; // Clear outdated, unused variables
	// Display Kafra Welcome Message
	switch (getarg(0)) {
		default:
		case 0:
			// Default message (obsolete)
			mes "[Funcionária Kafra]";
			mes "Bem-vindo à Corporação Kafra, nós sempre estamos ao seu lado.";
			mes "Em que posso ajudá-l"+(Sex == 1?"o":"a")+"?";
			break;
		case 1:
			// Niflheim specific message
			mes "[Funcionária Kafra]";
			mes "Bem-vindo... À Corporação... Kafra...";
			mes "Estamos sempre... Ao seu lado... Até na morte!";
			mes "Em que... Posso... Ajudá-l"+(Sex == 1?"o":"a")+"?...";
			break;
		case 2:
			// Guild Castle Kafra message
			@GID = getcharid(2);
			mes "[Funcionária Kafra]";
	 		mes "Bem-vindo. Membro da ^ff0000" + getguildname(@GID) + "^000000.";
			mes "A Corporação Kafra está sempre ao seu lado.";
			break;
		case 3:
			// Amatsu specific message (obsolete)
			mes "[Funcionária Kafra]";
			mes "Bem-vindo à Corporação Kafra, nós sempre estamos ao seu lado.";
			mes "Em que posso ajudá-l"+(Sex == 1?"o":"a")+"?";
			break;
		case 4:
			// Louyang and Ayothaya specific message (obsolete)
			mes "[Funcionária Kafra]";
			mes "Bem-vindo à Corporação Kafra, nós sempre estamos ao seu lado.";
			mes "Em que posso ajudar?";
			break;
		case 5:
			// NPC has it's own welcome message. (Display nothing)
			break;
	}
	next;
	while (true) {
		deletearray @K_Menu0$;
		if (getarg(0) == 2) {
			// Guild Kafra Menu override (free Teleport, free Storage, Free Cart)
			setarray @K_Menu0$[0],"Usar Armazém","Use Armazém da Guilda","Alugar Carrinho","Usar Teleporte","Cancelar";
		} else {
			switch (getarg(1)) {
				// Save and Storage only
				case 1:	setarray @K_Menu0$[0],"Salvar","Usar Armazém","Cancelar"; break;
				// Storage only
				case 2:	setarray @K_Menu0$[0],"Usar Armazém","Cancelar"; break;
				// No Teleport (Common)
				case 3: setarray @K_Menu0$[0],"Salvar","Usar Armazém","Alugar Carrinho","Ver outras informações","Cancelar"; break;
				// Case 4 is Einbroch no tele message.
				// No save, or teleport. (Common)
				case 5:	setarray @K_Menu0$[0],"Usar Armazém","Alugar Carrinho","Ver outras informações","Cancelar"; break;
				// Storage and Check Other Information only.
				case 6:	setarray @K_Menu0$[0],"Usar Armazém","Ver outras informações","Cancelar"; break;
				// Save, Storage, and Pushcart only (Kafra Warehouse)
				case 7:	setarray @K_Menu0$[0],"Salvar","Usar Armazém","Alugar Carrinho","Cancelar"; break;
				// Save, Storage, Other Check information. (Turbo track)
				case 8: setarray @K_Menu0$[0],"Salvar","Usar Armazém","Ver outras informações","Cancelar"; break;
				// No Save (Rune Knight)
				case 9: setarray @K_Menu0$[0],"Usar Armazém","Alugar Carrinho","Usar Teleporte","Ver outras informações","Cancelar"; break;
				// Storage, Save, and Pushcart (Dewata, reorder of case 7)
				case 10: setarray @K_Menu0$[0],"Usar Armazém","Salvar","Alugar Carrinho","Cancelar"; break;
				// Default message (obsolete)
				default: setarray @K_Menu0$[0],"Salvar","Usar Armazém","Usar Teleporte","Alugar Carrinho","Ver outras informações","Cancelar"; break;
			}
		}
		.@menu$ = "";
		for (.@i = 0; .@i < getarraysize(@K_Menu0$); ++.@i)
			.@menu$ += @K_Menu0$[.@i] + ":";
		.@j = select(.@menu$) - 1;
		if (@K_Menu0$[.@j] == "Salvar") {
			return;
		} else if (@K_Menu0$[.@j] == "Usar Armazém") {
			// Do not charge for Guild Storage
			if(getarg(0) == 2)
				callfunc "F_KafStor",2,0,0,"[Funcionária Kafra]";
			else
				callfunc "F_KafStor",0,getarg(3),getarg(0),"[Funcionária Kafra]";
			next;
		} else if (@K_Menu0$[.@j] == "Usar Teleporte") {
			// Display Einbroch "No Teleport Service" notice.
			if (getarg(1) != 4) {
				callfunc "F_KafTele",getarg(0),"[Funcionária Kafra]";
			} else {
     			mes "[Funcionária Kafra]";
     			mes "Nossa Sede Kafra de Schwaltsvalt";
     			mes "não possui serviço de teleporte";
     			mes "em virtude da";
     			mes "'^ff0000Restrição de Serviço de Teleporte em Schwaltsvalt^000000',";
     			mes "o contrato com a";
     			mes "República de Schwaltsvalt.";
     			next;
     			mes "[Funcionária Kafra]";
     			mes "Por favor, use o aeroplano";
     			mes "quando for para outro local.";
			}
			next;
		} else if (@K_Menu0$[.@j] == "Alugar Carrinho") {
			if(callfunc("F_KafCart",getarg(0),getarg(4),"[Funcionária Kafra]") == 1)
				next;
		} else if (@K_Menu0$[.@j] == "Ver outras informações") {
			callfunc "F_KafInfo",getarg(2);
			next;
		} else if (@K_Menu0$[.@j] == "Cancelar"){
			callfunc "F_KafEnd",getarg(0),0;
			end;
		} else if (@K_Menu0$[.@j] == "Usar Armazém da Guilda") {
			callfunc "F_KafStor",1,0,0,"[Funcionária Kafra]";
			next;
		}
	}
}

//===================================================
// Storage Function
//=   arg(0): Specifies the type of storage that has been requested:
//            0 = Regular storage
//            1 = Guild storage
//            2 = Regular storage, in a castle (free of charge)
//=   arg(1): Cost to use storage.
//=   arg(2): The type of NPC this is being called from. Notable values:
//            0,2-5 = Regular Kafra
//            1 = Niflheim Kafra (special messages)
//            6 = Zonda/Cool Event Staff (no RESRVPTS)
//=   arg(3): NPC title to display.
//===================================================
function	script	F_KafStor	{
	// Unable to access Guild Storage (Busy)
	if (getarg(0) == 1) {
		if (guildopenstorage()) {
			mes getarg(3);
			mes "Desculpe-me, mas outro membro do clã está usando o armazém do clã.";
			mes "Por favor, espere até que a pessoa termine.";
			close2;
			cutin "", 255;
			end;
		}
		cutin "", 255;
		close;
	}
	// Unable to access Normal Storage (Insufficient Basic Skills)
	if (basicskillcheck() && getskilllv(NV_BASIC) < 6) {
		mes getarg(3);
		// Niflheim Specific Message
		if (getarg(2) == 1) {
			mes "^666666Eu... Sinto... Muito...";
			mes "Você precisa... De pelo menos... Nível...";
			mes "De Classe 6... Como Aprendiz... Para utilizar... O Armazém...^000000";
			return;
		}
		mes "Eu sinto muito.";
		mes "Você precisa de pelo menos";
		mes "Nível de Classe 6 como Aprendiz";
		mes "para utilizar o Armazém.";
		return;
	}
	// Accessing Normal Storage (Skipped if accessing Storage from Guild castle)
	if (getarg(0) != 2) {
		// Consume "Free Ticket for Kafra Storage" if available.
		if (countitem(Cargo_Free_Ticket)) {
			delitem Cargo_Free_Ticket, 1;
		} else {
			if (Zeny < getarg(1)) {
				mes getarg(3);
				// Niflheim Specific Message
				if (getarg(2) == 1) {
					percentheal -50,-50;
					mes "^666666Você não tem... Dinheiro suficiente...";
					mes "A taxa... Do Armazém... É de 150... Zenys...";
					mes "Se você... Não tem... Dinheiro...";
					mes "Deixe... Parte... De sua alma...^000000";
					return;
				}
				// Standard Message
				mes "Você não tem dinheiro suficiente.";
				mes "A taxa do Armazém é de "+getarg(1)+" zenys.";
				return;
			}
			Zeny -= getarg(1);
			if (getarg(2) != 6)
				RESRVPTS += getarg(1) / 5;
		}
	}

	// Surpress the "End" message if in guild castle.
	if (getarg(0) != 2) {
		if (getarg(2) == 1) {
			// Niflheim specific Message
			percentheal 0,-10;
			mes getarg(3);
			for (.@i = 0; .@i < 5; ++.@i)
				mes "^666666Obrigada por... Utilizar...";
			mes "Nossos... Serviços...^000000";
		} else if (getarg(2) == 6) {
			// Zonda
			mes getarg(3);
			mes "Deixe-me abrir o seu armazém";
			mes "pessoal, nesse exato momento.";
			mes "Obrigado por apoiar a Corporação";
			mes "Eventos Incríveis, ao utilizar";
			mes "Pontos de Habilidade. Tenha um bom dia!";
		} else {
			// Normal message
			mes getarg(3);
			mes "Eu vou abrir o seu Armazém.";
			mes "Obrigada por utilizar nossos serviços.";
		}
	}
	callfunc("F_CheckKafCode"); //check your storage password, if set
	close2;
	openstorage;
	cutin "", 255;
	end;
}

//===================================================
// Teleport Function
//=   arg(2): The type of NPC this is being called from. Notable values:
//            2 = Guild Castle Kafra (don't consume tickets)
//            6 = Zonda/Cool Event Staff (no RESRVPTS)
//=   arg(1): NPC title to display.
//===================================================
function	script	F_KafTele	{
	mes getarg(1);
	mes "Por favor, selecione o seu destino.";
	next;
	.@menu$ = "";
	for (.@i = 0; .@i <= 6; ++.@i)
		.@menu$ += @wrpC$[.@i] + ":";
	.@j = select(.@menu$) - 1;
	if (@wrpC$[.@j] == "Cancelar")
		return;
	// Consume "Free Ticket for Kafra Transportation" if available.
	// Do not consume if in Guild castle
	if (countitem(Warp_Free_Ticket) > 0 && getarg(0) != 2) {
		delitem Warp_Free_Ticket, 1;
	} else {
		if (Zeny < @wrpP[.@j]) {
			mes getarg(1);
			mes "Você não tem dinheiro suficiente";
			mes "para utilizar o Teleporte.";
			mes "A taxa do Teleporte para "+@wrpD$[.@j]+" é "+@wrpP[.@j]+" zenys.";
			close2;
			cutin "", 255;
			end;
		}
		Zeny -= @wrpP[.@j];
		if (getarg(0) != 6)
			RESRVPTS += @wrpP[.@j] / 16;
	}
	cutin "", 255;
	if (@wrpD$[.@j] == "Al De Baran") warp "aldebaran",168,112;
	else if (@wrpD$[.@j] == "Alberta") warp "alberta", 117, 56;
	else if (@wrpD$[.@j] == "Comodo") warp "comodo", 209, 143;
	else if (@wrpD$[.@j] == "Farol de Comodo") warp "cmd_fild07", 127, 134;
	else if (@wrpD$[.@j] == "Geffen") warp "geffen", 120, 39;
	else if (@wrpD$[.@j] == "Izlude") { /*if (checkre(0)) warp "izlude", 128, 98; else*/ warp "izlude", 91, 105; }
	else if (@wrpD$[.@j] == "Juno") warp "yuno", 158, 125;
	else if (@wrpD$[.@j] == "Mina de Carvão") warp "mjolnir_02", 99, 351;
	else if (@wrpD$[.@j] == "Morroc") warp "morocc", 156, 46;
	else if (@wrpD$[.@j] == "Orc Dungeon") warp "gef_fild10", 52, 326;
	else if (@wrpD$[.@j] == "Payon") warp "payon", 161, 58;
	else if (@wrpD$[.@j] == "Prontera") warp "prontera", 116, 72;
	else if (@wrpD$[.@j] == "Umbala") warp "umbala", 100, 154;
	else if (@wrpD$[.@j] == "Veins") warp "veins",205,101;
	else if (@wrpD$[.@j] == "Rachel") warp "rachel",115,125;
	end;
}


//===================================================
// Cart Function
//=   arg(0): The type of NPC this is being called from. Notable values:
//            0,1,3-5 = Regular Kafra
//            2 = Guild Castle Kafra (don't consume tickets)
//            6 = Zonda/Cool Event Staff (no RESRVPTS)
//=   arg(1): Cost to rent a cart.
//=   arg(2): NPC title to display.
//===================================================
function	script	F_KafCart	{
	// Ensure that the class wanting to rent a pushcart is a merchant
	if (BaseClass != Job_Merchant) {
		mes getarg(2);
		mes "Eu sinto muito.";
		mes "Os carrinhos são disponíveis apenas à Mercadores, Ferreiros e Alquimistas.";
		return 1;
	}
	if (getskilllv(MC_PUSHCART) == 0) {
		mes getarg(2);
		mes "You can only rent a cart after";
		mes "learning the Pushcart Skill.";
		return 1;
	}
	// Make sure the invoking character does not have a cart already
	if (checkcart() == 1) {
		mes getarg(2);
		mes "Você já possui um carrinho.";
		return 1;
	}
	// Consume "Free Ticket for the Cart Service" if available.
	// Do not consume if in Guild castle.
	if (countitem(Cart_Free_Ticket) > 0 && getarg(0) != 2) {
		delitem Cart_Free_Ticket, 1;
	} else {
		mes getarg(2);
		mes "O aluguel do carrinho custa "+getarg(1)+" zenys.";
    	mes "Quer Alugar o Carrinho?";
		next;
		if (select("Alugar Carrinho.:Cancelar") == 2)
			return 0;
		if (Zeny < getarg(1)) {
			mes getarg(2);
			mes "Você não tem dinheiro suficiente.";
			mes "O aluguel do carrinho custa "+getarg(1)+" zenys.";
			return 1;
		}
		Zeny -= getarg(1);
		if (getarg(0) != 6)
			RESRVPTS += 48;
	}
	setcart;
	return 1;
}

//===================================================
// Special Reserve Points Function
//===================================================
function	script	F_KafInfo	{
	// Uncomment next line to block Kafra Storage Protection
	//.@block = 1;
	setarray .@m$, "Verificar pontos reservados.","Senha do Armazém","Informação da localização de Kafra","Cancelar";
	if (getarg(0) == 2) deletearray .@m$[1],2; // Port Malaya, Rune Knight: remove Storage Password and Kafra Employee Locations
	else if (.@block) deletearray .@m$[1],1; // Remove Storage Password
	while (true) {
		.@j = select(implode(.@m$,":")) - 1;
		if (.@m$[.@j] == "Verificar pontos reservados.") {
			mes "[Funcionária Kafra]";
			mes "Deixe-me ver...";
			mes strcharinfo(0) + "...";
			mes "Você tem um total de";
			mes RESRVPTS+ " pontos reservados.";
			next;
			mes "[Funcionária Kafra]";
			mes "Você pode trocar esses pontos por outros itens no Escritório Central da Corporação Kafra.";
			mes "Cada vez que você usa os nossos serviços, você ganha prêmios!";
			next;
			if(getarg(0) == 1)
				return;
		} else if (.@m$[.@j] == "Informação da localização de Kafra") {
			for (.@i = 0; .@i <= 3; ++.@i)
				viewpoint 1,@viewpX[.@i],@viewpY[.@i],(.@i+1),0xFF00FF;
			next;
			for (.@i = 0; .@i <= 3; ++.@i)
				viewpoint 2,@viewpX[.@i],@viewpY[.@i],(.@i+1),0xFF00FF;
		} else if (.@m$[.@j] == "Senha do Armazém") {
			callfunc("F_SetKafCode","[Funcionária Kafra]","Serviços Kafra");
		} else {
			return;
		}
	}
}

// === End Function ==================================================
//  arg(0): used to determine what message to display.
//  arg(1): used to determine if save message is displayed.
//  arg(2): used to display the name of the area you're saving in.
//===================================================================
function	script	F_KafEnd	{
	mes "[Funcionária Kafra]";
	if (getarg(1) == 1) {
		// Save
		mes "O seu Ponto de Retorno foi salvo.";
		mes "Obrigada por utilizar nossos serviços.";
	} else if (getarg(0) == 0 || getarg(0) == 5) {
		// Generic End
		mes "Nós, da Corporação Kafra, fazemos o melhor para que você possa receber um serviço de máxima qualidade. Nós nos esforçamos para fornecer aos nossos clientes serviços confiáveis e de fácil acesso, através de um gerenciamento rigoroso.";
		mes "Obrigada por utilizar os nossos serviços.";
	} else if (getarg(0) == 1) {
		// Niflheim End
		percentheal 0,-25;
		mes "^666666A Corporação... Kafra...";
		mes "Estará sempre... Ao seu lado...^000000";
	}
	close2;
	cutin "", 255;
	end;
}

//===================================================
// Check Storage Password Function
//===================================================
function	script	F_CheckKafCode	{
	if (!#kafra_code)
		return;
	mes "Entre com a senha do seu armazém:";
	@code_ = 0;
	input @code_;
	if (@code_ != #kafra_code) {
		dispbottom "Senha do armazém incorreta..";
		close2;
		cutin "",255;
		end;
	}
	@kafcode_try = 0;
	@code_ = 0;
	return;
}

// === Set / Change / Clear Storage Password Function ===
// getarg(0): NPC Name
// getarg(1): Company Name
//=======================================================
function	script	F_SetKafCode	{
	mes getarg(0);
	if (#kafra_code) {
		mes "O seu armazém está protegido com senha. O que gostaria de fazer agora?";
		next;
		switch (select("Trocar senha antiga -> 5000z:Remover senha do armazém -> 1000z:Cancelar")) {
			case 1:
				mes getarg(0);
				mes "Primeiramente, por favor entre com a sua ^0000FFsenha antiga^000000.";
				@code = callfunc("F_EntKafCode");
				if (!@code || @code != #kafra_code) {
					mes "Senha incorreta. Você não pode trocar a senha.";
					emotion e_hmm;
					break;
				}
				next;
				callsub S_SET,getarg(0),getarg(1);
				break;
			case 2:
				mes getarg(0);
				mes "Por favor, entre com sua senha antes de removê-la.";
				@code = callfunc("F_EntKafCode");
				if (!@code) {
					mes "A senha não foi trocada.";
					emotion e_hmm;
					break;
				}
				next;
				mes getarg(0);
				if (Zeny < 1000) {
					mes "Você não tem dinheiro suficiente.";
					emotion e_cash;
					break;
				}
				Zeny -= 1000;
				if (@code == #kafra_code) {
					#kafra_code = 0;
					mes "Você protegeu seu armazém com uma senha.";
					mes "Obrigado por utilizar os serviços "+getarg(1)+".";
					emotion e_thx;
				} else {
					mes "Senha incorreta. Nós não devolveremos os seus 1000z.";
					mes "Por favor, na próxima vez entre com a senha correta.";
					emotion e_sry;
				}
				break;
			case 3:
				break;
		}
	} else {
		mes getarg(1)+" orgulhosamente lhe apresenta um novo serviço:";
		mes "Proteção adicional com senha.";
		next;
		switch (select("Nova senha -> 5000z:Cancelar")) {
			case 1: callsub S_SET,getarg(0),getarg(1); break;
			case 2: break;
		}
	}
	close2;
	cutin "",255;
	end;

S_SET:
	mes getarg(0);
	mes "Agora entre com a sua ^FF0000nova senha^000000 para proteger seu armazém.";
	@code = callfunc("F_EntKafCode");
	if (!@code) {
		mes "A senha não foi trocada.";
		emotion e_hmm;
		return;
	}
	next;
	mes getarg(0);
	if (Zeny < 5000) {
		mes "Você não tem dinheiro suficiente.";
		emotion e_cash;
		return;
	}
	Zeny -= 5000;
	#kafra_code = @code;
	mes "Você protegeu seu armazém com uma senha.";
	mes "Obrigado por utilizar os serviços "+getarg(1)+".";
	emotion e_thx;
	return;
}

//===================================================
// Basic Password Validation Function
//===================================================
function	script	F_EntKafCode	{
	mes "Enter a number 1000~10000000:";
	@code_ = 0;
	++@kafcode_try;
	if (@kafcode_try > 10) {
		@kafcode_try = 0;
		logmes "Hack: Tentou diminuir a senha.";
	}
	if (input(@code_) == 1) {
		mes "Você não pode usar uma senha tão grande.";
		return 0;
	}
	if (@code_ < 1000) {
		mes "Você não pode usar uma senha tão pequena.";
		return 0;
	}
	return @code_;
}

//===================================================
// Warp Points / View Points Function
//===================================================
function	script	F_KafSet	{
	deletearray @wrpC$;
	deletearray @wrpD$;
	deletearray @wrpP$;
	deletearray @viewpX;
	deletearray @viewpY;
	if (strnpcinfo(4) == "prontera") {
		setarray @wrpD$, "Izlude", "Geffen", "Payon", "Morroc", "Vila dos Orcs", "Alberta";
		setarray @wrpP, 600, 1200, 1200, 1200, 1200, 1800;
		setarray @viewpX, 151, 29, 282, 152;
		setarray @viewpY, 29, 207, 200, 326;
	} else if (strnpcinfo(4) == "alberta") {
		setarray @wrpP, 1200, 1800, 1800;
		setarray @wrpD$, "Payon", "Morroc", "Prontera";
		setarray @viewpX, 28, 113, 0, 0;
		setarray @viewpY, 229, 60, 0, 0;
	} else if (strnpcinfo(4) == "aldebaran") {
		setarray @wrpP, 1200, 1200, 1800, 1700;
		setarray @wrpD$, "Geffen", "Juno" , "Izlude", "Mina de Carvão";
	} else if (strnpcinfo(4) == "comodo" ) {
		setarray @wrpD$, "Morroc", "Farol de Comodo", "Umbala";
		setarray @wrpP, 1800, 1200, 1800;
	} else if (strnpcinfo(4) == "cmd_fild07") {
		setarray @wrpD$, "Comodo", "Morroc";
		setarray @wrpP, 1200, 1200;
	} else if (strnpcinfo(4) == "geffen") {
		setarray @wrpD$, "Prontera", "Al De Baran", "Vila dos Orcs", "Mina de Carvão";
		setarray @wrpP, 1200, 1200, 1200, 1700;
		setarray @viewpX, 120, 203;
		setarray @viewpY, 62, 123;
	} else if (strnpcinfo(4) == "izlude") {
		setarray @wrpD$, "Geffen", "Payon", "Morroc", "Al De Baran";
		setarray @wrpP, 1200, 1200, 1200, 1800;
	} else if (strnpcinfo(4) == "morocc") {
		setarray @wrpD$, "Prontera", "Payon", "Alberta", "Comodo", "Farol de Comodo";
		setarray @wrpP, 1200, 1200, 1800, 1800, 1200;
		setarray @viewpX, 156, 163, 28, 292;
		setarray @viewpY, 97, 260, 167, 211;
	} else if (strnpcinfo(4) == "umbala") {
		setarray @wrpD$, "Comodo";
		setarray @wrpP, 1800;
	} else if (strnpcinfo(4) == "payon") {
		setarray @wrpD$, "Prontera", "Alberta", "Morroc";
		setarray @wrpP, 1200, 1200, 1200;
	} else if (strnpcinfo(4) == "yuno") {
		setarray @wrpD$, "Al De Baran";
		setarray @wrpP, 1200;
		setarray @viewpX, 328, 278, 153, 0;
		setarray @viewpY, 108, 221, 187, 0;
	} else if (strnpcinfo(4) == "job3_rune01") {
		setarray @wrpD$, "Izlude", "Geffen", "Payon", "Morroc", "Alberta";
		setarray @wrpP, 600, 1200, 1200, 1200, 1800;
	} else if (strnpcinfo(4) == "rachel") {
		setarray @wrpD$, "Veins";
		setarray @wrpP, 2200;
	} else if (strnpcinfo(4) == "veins") {
		setarray @wrpD$, "Rachel";
		setarray @wrpP, 2200;
	}
	for (.@i = 0; .@i < getarraysize(@wrpD$); ++.@i)
		@wrpC$[.@i] = @wrpD$[.@i]+" -> "+@wrpP[.@i];
	@wrpC$[getarraysize(@wrpC$)] = "Cancelar";
	return;
}
